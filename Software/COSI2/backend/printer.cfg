# This file contains common pin mappings for MKS RUMBA32 boards.  To use
# this config, the firmware should be compiled for the STMicroelectronics STM32,
# Processor model STM32F446, Clock Reference 12 MHz crystal.

# See docs/Config_Reference.md for a description of parameters.

[mcu]
#serial: 1d50:614e
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_12345-if00
#serial: /dev/serial0
#   The serial port to connect to the MCU. If unsure (or if it
#   changes) see the "Where's my serial port?" section of the FAQ.
#   This parameter must be provided when using a serial port.
baud: 250000
#   The baud rate to use. The default is 250000.
#canbus_uuid:
#   If using a device connected to a CAN bus then this sets the unique
#   chip identifier to connect to. This value must be provided when using
#   CAN bus for communication.
#canbus_interface:
#   If using a device connected to a CAN bus then this sets the CAN
#   network interface to use. The default is 'can0'.
restart_method: command
#   This controls the mechanism the host will use to reset the
#   micro-controller. The choices are 'arduino', 'cheetah', 'rpi_usb',
#   and 'command'. The 'arduino' method (toggle DTR) is common on
#   Arduino boards and clones. The 'cheetah' method is a special
#   method needed for some Fysetc Cheetah boards. The 'rpi_usb' method
#   is useful on Raspberry Pi boards with micro-controllers powered
#   over USB - it briefly disables power to all USB ports to
#   accomplish a micro-controller reset. The 'command' method involves
#   sending a Klipper command to the micro-controller so that it can
#   reset itself. The default is 'arduino' if the micro-controller
#   communicates over a serial port, 'command' otherwise.

[printer]
kinematics: cartesian
#   The type of printer in use. This option may be one of: cartesian,
#   corexy, corexz, hybrid_corexy, hybrid_corexz, rotary_delta, delta,
#   deltesian, polar, winch, or none. This parameter must be specified.
max_velocity: 50
#   Maximum velocity (in mm/s) of the toolhead (relative to the
#   print). This parameter must be specified.
max_accel: 20
#   Maximum acceleration (in mm/s^2) of the toolhead (relative to the
#   print). This parameter must be specified.
#max_accel_to_decel:
#   A pseudo acceleration (in mm/s^2) controlling how fast the
#   toolhead may go from acceleration to deceleration. It is used to
#   reduce the top speed of short zig-zag moves (and thus reduce
#   printer vibration from these moves). The default is half of
#   max_accel.
#square_corner_velocity: 5.0
#   The maximum velocity (in mm/s) that the toolhead may travel a 90
#   degree corner at. A non-zero value can reduce changes in extruder
#   flow rates by enabling instantaneous velocity changes of the
#   toolhead during cornering. This value configures the internal
#   centripetal velocity cornering algorithm; corners with angles
#   larger than 90 degrees will have a higher cornering velocity while
#   corners with angles less than 90 degrees will have a lower
#   cornering velocity. If this is set to zero then the toolhead will
#   decelerate to zero at each corner. The default is 5mm/s.

#[output_pin !X_Enable]
#pin:!PC11
#   The pin to configure as an output. This parameter must be
#   provided.
#pwm: False

#   Set if the output pin should be capable of pulse-width-modulation.
#   If this is true, the value fields should be between 0 and 1; if it
#   is false the value fields should be either 0 or 1. The default is
#   False.
#static_value:
#   If this is set, then the pin is assigned to this value at startup
#   and the pin can not be changed during runtime. A static pin uses
#   slightly less ram in the micro-controller. The default is to use
#   runtime configuration of pins.
#value:1
#   The value to initially set the pin to during MCU configuration.
#   The default is 0 (for low voltage).

[stepper_x]
step_pin: PA0
#   Step GPIO pin (triggered high). This parameter must be provided.
dir_pin: !PC15
#   Direction GPIO pin (high indicates positive direction). This
#   parameter must be provided.
enable_pin: !PC11
#   Enable pin (default is enable high; use ! to indicate enable
#   low). If this parameter is not provided then the stepper motor
#   driver must always be enabled.
rotation_distance: 5
#   Distance (in mm) that the axis travels with one full rotation of
#   the stepper motor (or final gear if gear_ratio is specified).
#   This parameter must be provided.
microsteps: 64 #128
#   The number of microsteps the stepper motor driver uses. This
#   parameter must be provided.
full_steps_per_rotation: 200
#   The number of full steps for one rotation of the stepper motor.
#   Set this to 200 for a 1.8 degree stepper motor or set to 400 for a
#   0.9 degree motor. The default is 200.
#gear_ratio:
#   The gear ratio if the stepper motor is connected to the axis via a
#   gearbox. For example, one may specify "5:1" if a 5 to 1 gearbox is
#   in use. If the axis has multiple gearboxes one may specify a comma
#   separated list of gear ratios (for example, "57:11, 2:1"). If a
#   gear_ratio is specified then rotation_distance specifies the
#   distance the axis travels for one full rotation of the final gear.
#   The default is to not use a gear ratio.
step_pulse_duration: 0.0000035 # 3,5 µs
#   The minimum time between the step pulse signal edge and the
#   following "unstep" signal edge. This is also used to set the
#   minimum time between a step pulse and a direction change signal.
#   The default is 0.000000100 (100ns) for TMC steppers that are
#   configured in UART or SPI mode, and the default is 0.000002 (which
#   is 2us) for all other steppers.
endstop_pin: !PB12
#   Endstop switch detection pin. If this endstop pin is on a
#   different mcu than the stepper motor then it enables "multi-mcu
#   homing". This parameter must be provided for the X, Y, and Z
#   steppers on cartesian style printers.
#position_min: 0
#   Minimum valid distance (in mm) the user may command the stepper to
#   move to.  The default is 0mm.
position_endstop: 0
#   Location of the endstop (in mm). This parameter must be provided
#   for the X, Y, and Z steppers on cartesian style printers.
position_max: 497
#   Maximum valid distance (in mm) the user may command the stepper to
#   move to. This parameter must be provided for the X, Y, and Z
#   steppers on cartesian style printers.
homing_speed: 20
#   Maximum velocity (in mm/s) of the stepper when homing. The default
#   is 5mm/s.
homing_retract_dist: 5
#   Distance to backoff (in mm) before homing a second time during
#   homing. Set this to zero to disable the second home. The default
#   is 5mm.
homing_retract_speed: 5
#   Speed to use on the retract move after homing in case this should
#   be different from the homing speed, which is the default for this
#   parameter
#second_homing_speed:
#   Velocity (in mm/s) of the stepper when performing the second home.
#   The default is homing_speed/2.
homing_positive_dir: false
#   If true, homing will cause the stepper to move in a positive
#   direction (away from zero); if false, home towards zero. It is
#   better to use the default than to specify this parameter. The
#   default is true if position_endstop is near position_max and false
#   if near position_min.
##gear_ratio:
#   The gear ratio if the stepper motor is connected to the axis via a
#   gearbox. For example, one may specify "5:1" if a 5 to 1 gearbox is
#   in use. If the axis has multiple gearboxes one may specify a comma
#   separated list of gear ratios (for example, "57:11, 2:1"). If a
#   gear_ratio is specified then rotation_distance specifies the
#   distance the axis travels for one full rotation of the final gear.
#   The default is to not use a gear ratio.


[stepper_y]
step_pin: PE5
dir_pin: PE6
enable_pin: !PE3
microsteps: 64
rotation_distance: 5
step_pulse_duration: 0.0000035 # 3,5 µs
endstop_pin: !PB15
position_endstop: 0
position_max: 460
homing_speed: 20
homing_retract_dist: 5
homing_retract_speed: 5
homing_positive_dir: false


[stepper_z]
step_pin: PE1
dir_pin: !PE2
enable_pin: !PB7
microsteps: 64
rotation_distance: 5
step_pulse_duration: 0.0000035 # 3,5 µs
endstop_pin: !PD9
position_endstop: 0.5
position_max: 610
homing_speed: 20
homing_retract_dist: 5
homing_retract_speed: 5
homing_positive_dir: false


[extruder]
step_pin: PB5
dir_pin: PB6
enable_pin: !PC12
microsteps: 16
rotation_distance: 33.500
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC6
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PC4
control: pid
pid_Kp: 22.2
pid_Ki: 1.08
pid_Kd: 114
min_temp: 0
max_temp: 2500

#[extruder1]
#step_pin: PD6
#dir_pin: PD7
#enable_pin: !PD4
#heater_pin: PC7
#sensor_pin: PC3
#...

#[extruder2]
#step_pin: PD2
#dir_pin: PD3
#enable_pin: !PD0
#heater_pin: PC8
#sensor_pin: PC2
#...

[heater_bed]
heater_pin: PA1
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PC0
control: watermark
min_temp: 0
max_temp: 130

[fan]
pin: PC9

#[heater_fan fan1]
#pin: PA8

# Kill-Switch
[gcode_button kill_switch]
pin: PC5
press_gcode: M112



[printer]
kinematics: cartesian
max_velocity: 300#300
max_accel: 20#3000
max_z_velocity: 200
max_z_accel: 20


########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_3=PE9, EXP1_5=PE12, EXP1_7=PE14, EXP1_9=<GND>,
    EXP1_2=PE7, EXP1_4=PE10, EXP1_6=PE13, EXP1_8=PE15, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=PA6, EXP2_3=PB2, EXP2_5=PB1, EXP2_7=PB0,  EXP2_9=<GND>,
    EXP2_2=PA5, EXP2_4=PA2, EXP2_6=PA7, EXP2_8=<RST>, EXP2_10=PC5,


[output_pin X_CS]
pin: PC14

[output_pin Y_CS]
pin: PE4

[output_pin Z_CS]
pin: PE0

[output_pin E0_CS]
pin: PC13

[output_pin E1_CS]
pin: PD5

[output_pin E2_CS]
pin: PD1


[gcode_macro hard_disable_drives]
description: Disables all motors. Software realizes nothing from it.
gcode:
  G4 P500
  SET_PIN PIN=X_CS VALUE=1
  SET_PIN PIN=Y_CS VALUE=1
  SET_PIN PIN=Z_CS VALUE=1
  SET_PIN PIN=E0_CS VALUE=1
  SET_PIN PIN=E1_CS VALUE=1
  SET_PIN PIN=E2_CS VALUE=1
  G4 P500


[gcode_macro hard_enable_drives]
description: Disables all motors. Software realizes nothing from it.
gcode:
  G4 P500
  SET_PIN PIN=X_CS VALUE=0
  SET_PIN PIN=Y_CS VALUE=0
  SET_PIN PIN=Z_CS VALUE=0
  SET_PIN PIN=E0_CS VALUE=0
  SET_PIN PIN=E1_CS VALUE=0
  SET_PIN PIN=E2_CS VALUE=0
  G4 P500


[gcode_arcs] #enables G2 and G3


# See the sample-lcd.cfg file for definitions of common LCD displays.


########################################
# TMC2209 configuration
########################################

#[tmc2209 stepper_x]
#uart_pin: PC14
##tx_pin: PA3
#run_current: 0.800
#diag_pin:

#[tmc2209 stepper_y]
#uart_pin: PE4
##tx_pin: PA4
#run_current: 0.800
#diag_pin:

#[tmc2209 stepper_z]
#uart_pin: PE0
##tx_pin: PD13
#run_current: 0.800
#diag_pin:

#[tmc2209 extruder]
#uart_pin: PC13
##tx_pin: PD14
#run_current: 0.600
#diag_pin:
